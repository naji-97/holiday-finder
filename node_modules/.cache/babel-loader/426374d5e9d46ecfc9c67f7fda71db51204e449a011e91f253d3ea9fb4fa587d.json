{"ast":null,"code":"var _jsxFileName = \"D:\\\\miccrovers\\\\module-4\\\\holiday-finder\\\\src\\\\components\\\\CountryList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchHolidaysByCountryAsync } from '../state/holidayReducer';\nimport { fetchCountry } from '../state/countryReducer';\nimport HolidayList from './HolidayList';\nimport Country from './Country';\nimport \"./styles/countryList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryList = () => {\n  _s();\n  const dispatch = useDispatch();\n  const countries = useSelector(state => state.countries.countries);\n  const holidays = useSelector(state => state.holiday.holidays);\n  const location = useLocation();\n  // const [continent, setContinent] = useState('all');\n  const [searchQuery, setSearchQuery] = useState('');\n  useEffect(() => {\n    if (countries.length === 0) {\n      dispatch(fetchCountry());\n    }\n  }, []);\n  const handleCountryClick = countryCode => {\n    const formattedCountryCode = countryCode.toLowerCase(); // Ensure the countryCode is in lowercase\n    dispatch(fetchHolidaysByCountryAsync(formattedCountryCode));\n  };\n  const filteredCountries = countries.filter(country => {\n    // Perform case-insensitive search by converting both search query and country name to lowercase\n    return country.name.toLowerCase().includes(searchQuery.toLowerCase());\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"All Countries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search country...\",\n        className: \" select search-input\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"countries\",\n      children: filteredCountries.map(country => /*#__PURE__*/_jsxDEV(Country, {\n        countryCode: country.countryCode,\n        name: country.name,\n        continent: country.continent,\n        population: country.population,\n        flag: country.flagPng,\n        capital: country.capital,\n        timezones: country.timezones,\n        handleCountryClick: handleCountryClick\n      }, country.countryCode, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), holidays && holidays.length > 0 && /*#__PURE__*/_jsxDEV(HolidayList, {\n      holidays: holidays\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 43\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(CountryList, \"aGZTiA6QqGFWFqiekRSsSkXdCRY=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useLocation];\n});\n_c = CountryList;\nexport default CountryList;\nvar _c;\n$RefreshReg$(_c, \"CountryList\");","map":{"version":3,"names":["React","useEffect","useState","NavLink","useLocation","useDispatch","useSelector","fetchHolidaysByCountryAsync","fetchCountry","HolidayList","Country","jsxDEV","_jsxDEV","CountryList","_s","dispatch","countries","state","holidays","holiday","location","searchQuery","setSearchQuery","length","handleCountryClick","countryCode","formattedCountryCode","toLowerCase","filteredCountries","filter","country","name","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","map","continent","population","flag","flagPng","capital","timezones","_c","$RefreshReg$"],"sources":["D:/miccrovers/module-4/holiday-finder/src/components/CountryList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchHolidaysByCountryAsync } from '../state/holidayReducer';\r\nimport { fetchCountry } from '../state/countryReducer';\r\nimport HolidayList from './HolidayList';\r\nimport Country from './Country';\r\nimport \"./styles/countryList.css\"\r\n\r\n\r\nconst CountryList = () => {\r\n  const dispatch = useDispatch();\r\n  const countries = useSelector(state => state.countries.countries);\r\n  const holidays = useSelector(state => state.holiday.holidays);\r\n  const location = useLocation();\r\n  // const [continent, setContinent] = useState('all');\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (countries.length === 0) {\r\n      dispatch(fetchCountry());\r\n    }\r\n  }, []);\r\n\r\n  const handleCountryClick = (countryCode) => {\r\n    const formattedCountryCode = countryCode.toLowerCase(); // Ensure the countryCode is in lowercase\r\n    dispatch(fetchHolidaysByCountryAsync(formattedCountryCode));\r\n  };\r\n\r\n  const filteredCountries = countries.filter(country => {\r\n    // Perform case-insensitive search by converting both search query and country name to lowercase\r\n    return country.name.toLowerCase().includes(searchQuery.toLowerCase());\r\n  });\r\n\r\n  return (\r\n    <div className='main'>\r\n      <div className='dropdown'>\r\n        <h1 className='title'>All Countries</h1>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search country...\"\r\n          className=\" select search-input\"\r\n          value={searchQuery}\r\n          onChange={e => setSearchQuery(e.target.value)}\r\n        />\r\n        {/* <select\r\n          name='continents'\r\n          id='continents'\r\n          className='select'\r\n          onChange={(e) => setContinent(e.target.value)}\r\n        >\r\n          <option value=\"all\">All</option>\r\n          <option value=\"Antarctica\">Antarctica</option>\r\n          <option value=\"Africa\">Africa</option>\r\n          <option value=\"Asia\">Asia</option>\r\n          <option value=\"Europe\">Europe</option>\r\n          <option value=\"Oceania\">Oceania</option>\r\n          <option value=\"South America\">South America</option>\r\n          <option value=\"North America\">North America</option>\r\n        </select> */}\r\n      </div>\r\n      <ul className='countries'>\r\n        {filteredCountries.map((country) => (\r\n          <Country\r\n            key={country.countryCode}\r\n            countryCode={country.countryCode}\r\n            name={country.name}\r\n            continent={country.continent}\r\n            population={country.population}\r\n            flag={country.flagPng}\r\n            capital={country.capital}\r\n            timezones={country.timezones}\r\n            handleCountryClick={handleCountryClick}\r\n          />\r\n        ))}\r\n      </ul>\r\n\r\n      {/* Render the HolidayList component when holidays are available */}\r\n      {holidays && holidays.length > 0 && <HolidayList holidays={holidays} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}